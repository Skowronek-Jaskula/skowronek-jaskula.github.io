@use "sass:map";
@use "sass:math";
@use "../abstracts/colors" as *;
@use "../abstracts/mixins" as *;
@use "../abstracts/variables" as *;

/// @access private
/// @group private-members
/// @type Number
$_controller-width: 8rem;

/// @access private
/// @group private-members
/// @type Number
$_controller-height: 1.5rem;

/// Variable defining controllers circle-checkboox position (checked).
/// @access private
/// @group private-members
/// @type Number
$_controller-pos-checked: calc(#{$_controller-width} - #{$_controller-height});

/// Base class for a controller component.
.controller {
  &__toggle {
    @include box-shadows($state: "normal", $color: $grey4);

    align-items: center;
    -webkit-appearance: none;
    background-color: $grey2;
    border-radius: math.div($_controller-height, 2);
    display: flex;
    height: $_controller-height;
    left: calc(50% + #{$body-width} / 2 - #{$_controller-height} / 2);
    margin: 0;
    position: fixed;
    top: calc(#{$_controller-width} - (#{$_controller-height} / 2));
    transform: rotateZ(45deg);
    transform-origin: calc(#{$_controller-height} / 2);
    transition: background-color ease-in 0.2s, transform ease-in 0.25s;
    width: $_controller-width;
    z-index: 9;

    // AFTER - controller button
    &::after {
      @include box-shadows($state: "normal", $color: $grey4);

      background-color: $white;
      border-radius: 50%;
      content: "";
      height: #{$_controller-height};
      position: absolute;
      transition: left ease-in 0.2s;
      transition-delay: 0.1s;
      width: $_controller-height;
    }

    // BEFORE - label
    &::before {
      color: $white;
      content: attr(data-label);
      font-size: 0.75rem;
      margin-right: 0.5rem;
      text-align: right;
      transition: opacity 0.2s;
      width: 100%;
    }

    &:hover {
      @include box-shadows($state: "hover");
    }

    &:focus {
      @include box-shadows($state: "focus");

      &::after {
        @include box-shadows($state: "normal", $color: $main);
      }
    }

    &:disabled {
      @include box-shadows($state: "normal", $color: $grey2);

      background-color: $grey1;
      cursor: inherit;
    }

    &:checked {
      background-color: $main;
      box-shadow: none;
      justify-content: initial;
      transform: rotateZ(-45deg);

      &:hover {
        @include box-shadows($state: "hover");
      }

      &:focus {
        @include box-shadows($state: "focus");
      }

      &::before {
        opacity: 1;
      }

      &::after {
        @include box-shadows($state: "normal", $color: $main);

        left: 0;
      }

      ~ .content::after {
        bottom: 0;
        left: 0;
        opacity: 1;
        position: absolute;
        right: 0;
        top: 0;
      }
    }

    // stylelint-disable no-descending-specificity
    &:not(:checked) {
      // stylelint-enable no-descending-specificity
      &::before {
        opacity: 0;
      }

      &::after {
        left: $_controller-pos-checked;
      }

      &:hover::after,
      &:focus::after {
        @include box-shadows($state: "normal", $color: $grey4);
      }

      &:disabled {
        &::before,
        &::after {
          content: none;
        }
      }
    }

    &:disabled:checked {
      @include box-shadows($state: "normal", $color: $grey2);

      background-color: $grey1;

      &::before {
        color: $grey3;
      }

      &::after,
      &:hover::after,
      &:focus::after {
        @include box-shadows($state: "normal", $color: $grey2);
      }
    }
  }

  &__label {
    color: map.get($velvets, "5");
    font-weight: bold;
    position: absolute;
    top: 1rem;
    z-index: 9;
  }
}
